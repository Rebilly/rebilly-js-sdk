/**
* This file was auto-generated by rebilly-sdk-generator.
* Do not make direct changes to this file.
*/

// @ts-nocheck
import {csvHeader} from '@/request-headers';

export default function WebsitesResource({apiHandler}) {
  return {
    /**
     * @param { rebilly.GetWebsiteCollectionRequest } request
     * @returns { rebilly.GetWebsiteCollectionResponsePromise } response
     */
    getAll({
      limit = null,
      offset = null,
      q = null,
      filter = null,
      sort = null,
    } = {}) {
      const params = {limit, offset, q, filter, sort};
      return apiHandler.getAll(`websites`, params);
    },
    /**
     * @param { rebilly.CreateWebsiteRequest } request
     * @returns { rebilly.PostWebsiteResponsePromise } response
     */
    create({id = '', data}) {
      return apiHandler.create(`websites/${id}`, id, data);
    },
    /**
     * @returns { rebilly.GetWebsiteResponsePromise } response
     */
    get({id}) {
      return apiHandler.get(`websites/${id}`);
    },
    /**
     * @returns { rebilly.PutWebsiteResponsePromise } response
     */
    update({id, data}) {
      return apiHandler.put(`websites/${id}`, data);
    },
    delete({id}) {
      return apiHandler.delete(`websites/${id}`);
    },
    downloadCSV({
      limit = null,
      offset = null,
      sort = null,
      expand = null,
      filter = null,
      q = null,
    } = {}) {
      const config = {
        params: {
          limit,
          offset,
          sort,
          expand,
          filter,
          q,
        },
        headers: csvHeader,
      };
      return apiHandler.download('websites', config);
    },
  };
}
