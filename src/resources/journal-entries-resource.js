/**
* This file was auto-generated by rebilly-sdk-generator.
* Do not make direct changes to this file.
*/

export default function JournalEntriesResource({apiHandler}) {
  return {
    /**
     * @param { rebilly.GetJournalEntryCollectionRequest } request
     * @returns { rebilly.GetJournalEntryCollectionResponsePromise } response
     */
    getAllEntries({
      limit = null,
      offset = null,
      filter = null,
      sort = null,
    } = {}) {
      const params = {limit, offset, filter, sort};
      return apiHandler.getAll(`journal-entries`, params);
    },
    /**
     * @param { rebilly.CreateJournalEntryRequest } request
     * @returns { rebilly.PostJournalEntryResponsePromise } response
     */
    createEntry({id = '', data}) {
      return apiHandler.create(`journal-entries/${id}`, id, data);
    },
    /**
     * @returns { rebilly.GetJournalEntryResponsePromise } response
     */
    getEntry({id}) {
      return apiHandler.get(`journal-entries/${id}`);
    },
    /**
     * @returns { rebilly.PutJournalEntryResponsePromise } response
     */
    updateEntry({id, data}) {
      return apiHandler.put(`journal-entries/${id}`, data);
    },
    /**
     * @param { rebilly.GetJournalRecordCollectionRequest } request
     * @returns { rebilly.GetJournalRecordCollectionResponsePromise } response
     */
    getAllRecords({
      id,
      limit = null,
      offset = null,
      filter = null,
      sort = null,
      expand = null,
    }) {
      const params = {limit, offset, filter, sort, expand};
      return apiHandler.getAll(`journal-entries/${id}/records`, params);
    },
    createRecord({id, data}) {
      return apiHandler.post(`journal-entries/${id}/records`, data);
    },
    /**
     * @returns { rebilly.GetJournalRecordResponsePromise } response
     */
    getRecord({id, journalRecordId}) {
      return apiHandler.get(`journal-entries/${id}/records/${journalRecordId}`);
    },
    /**
     * @returns { rebilly.PutJournalRecordResponsePromise } response
     */
    updateRecord({id, journalRecordId, data}) {
      return apiHandler.put(
        `journal-entries/${id}/records/${journalRecordId}`,
        data
      );
    },
    deleteRecord({id, journalRecordId}) {
      return apiHandler.delete(
        `journal-entries/${id}/records/${journalRecordId}`
      );
    },
  };
}
