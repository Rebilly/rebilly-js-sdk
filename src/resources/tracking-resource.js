/**
* This file was auto-generated by rebilly-sdk-generator.
* Do not make direct changes to this file.
*/

// @ts-nocheck
import {csvHeader} from '@/request-headers';

export default function TrackingResource({apiHandler}) {
  return {
    /**
     * @param { rebilly.GetTrackingApiCollectionRequest } request
     * @returns { rebilly.GetTrackingApiCollectionResponse } response
     */
    getAllApiLogs({
      limit = null,
      offset = null,
      sort = null,
      filter = null,
      q = null,
    } = {}) {
      const params = {limit, offset, sort, filter, q};
      return apiHandler.getAll(`tracking/api`, params);
    },
    /**
     * @returns { rebilly.GetTrackingApiResponse } response
     */
    getApiLog({id}) {
      return apiHandler.get(`tracking/api/${id}`);
    },
    /**
     * @param { rebilly.GetTrackingListCollectionRequest } request
     * @returns { rebilly.GetTrackingListCollectionResponse } response
     */
    getAllListsChangesHistory({
      limit = null,
      offset = null,
      sort = null,
      filter = null,
      q = null,
    } = {}) {
      const params = {limit, offset, sort, filter, q};
      return apiHandler.getAll(`tracking/lists`, params);
    },
    /**
     * @param { rebilly.GetTrackingWebhookCollectionRequest } request
     * @returns { rebilly.GetTrackingWebhookCollectionResponse } response
     */
    getAllWebhookTrackingLogs({
      limit = null,
      offset = null,
      sort = null,
      filter = null,
      q = null,
    } = {}) {
      const params = {limit, offset, sort, filter, q};
      return apiHandler.getAll(`tracking/webhooks`, params);
    },
    /**
     * @returns { rebilly.GetTrackingWebhookResponse } response
     */
    getWebhookTrackingLog({id}) {
      return apiHandler.get(`tracking/webhooks/${id}`);
    },
    resendWebhook({id}) {
      return apiHandler.post(`tracking/webhooks/${id}/resend`);
    },
    downloadApiLogsCSV({
      limit = null,
      offset = null,
      sort = null,
      filter = null,
      q = null,
    } = {}) {
      const config = {
        params: {
          limit,
          offset,
          sort,
          filter,
          q,
        },
        headers: csvHeader,
      };
      return apiHandler.download('tracking/api', config);
    },
  };
}
