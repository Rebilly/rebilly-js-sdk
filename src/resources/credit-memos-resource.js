/**
* This file was auto-generated by rebilly-sdk-generator.
* Do not make direct changes to this file.
*/

export default function CreditMemosResource({apiHandler}) {
  return {
    /**
     * @param { rebilly.GetCreditMemoCollectionRequest } request
     * @returns { rebilly.GetCreditMemoCollectionResponsePromise } response
     */
    getAll({
      filter = null,
      sort = null,
      limit = null,
      offset = null,
      q = null,
      expand = null,
    } = {}) {
      const params = {filter, sort, limit, offset, q, expand};
      return apiHandler.getAll(`credit-memos`, params);
    },
    /**
     * @param { rebilly.CreateCreditMemoRequest } request
     * @returns { rebilly.PostCreditMemoResponsePromise } response
     */
    create({id = '', data}) {
      return apiHandler.create(`credit-memos/${id}`, id, data);
    },
    /**
     * @returns { rebilly.GetCreditMemoResponsePromise } response
     */
    get({id, expand = null}) {
      const params = {expand};
      return apiHandler.get(`credit-memos/${id}`, params);
    },
    /**
     * @returns { rebilly.PutCreditMemoResponsePromise } response
     */
    update({id, data}) {
      return apiHandler.put(`credit-memos/${id}`, data);
    },
    void({id}) {
      return apiHandler.post(`credit-memos/${id}/void`);
    },
    /**
     * @param { rebilly.GetCreditMemoTimelineCollectionRequest } request
     * @returns { rebilly.GetCreditMemoTimelineCollectionResponsePromise } response
     */
    getAllTimelineMessages({
      id,
      limit = null,
      offset = null,
      filter = null,
      sort = null,
      q = null,
    }) {
      const params = {limit, offset, filter, sort, q};
      return apiHandler.getAll(`credit-memos/${id}/timeline`, params);
    },
    createTimelineComment({id, data}) {
      return apiHandler.post(`credit-memos/${id}/timeline`, data);
    },
    /**
     * @returns { rebilly.GetCreditMemoTimelineResponsePromise } response
     */
    getTimelineMessage({id, messageId}) {
      return apiHandler.get(`credit-memos/${id}/timeline/${messageId}`);
    },
    deleteTimelineMessage({id, messageId}) {
      return apiHandler.delete(`credit-memos/${id}/timeline/${messageId}`);
    },
  };
}
